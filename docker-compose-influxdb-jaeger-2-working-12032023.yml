version: '3'

services:
  #  Ocelot
  ## Serves as a collector for traces
  agent:
    image: inspectit/inspectit-ocelot-agent:${INSPECTIT_OCELOT_VERSION}
    container_name: agent
    deploy:
      resources:
        limits:
          memory: 128M
    volumes:
      - ./agent:/agent

  ## Self Monitoring
  ocelot-eum-server:
    image: inspectit/inspectit-ocelot-eum-server:${INSPECTIT_OCELOT_VERSION}
    container_name: ocelot-eum-server
    environment:
      - INSPECTIT_EUM_SERVER_EXPORTERS_METRICS_INFLUX_URL=http://influxdb:8086
      - INSPECTIT_EUM_SERVER_EXPORTERS_METRICS_INFLUX_DATABASE=inspectit_eum
      - INSPECTIT_EUM_SERVER_EXPORTERS_TRACING_JAEGER_GRPC=jaeger:14250
    deploy:
      resources:
        limits:
          memory: 256M
    volumes:
      - ./eum-server:/eum-server
    ports:
      - 8085:8085

  #  Monitoring Backend

  #  InfluxDB
  ## Time Series Database
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    environment:
      - INFLUXDB_HTTP_FLUX_ENABLED=true
      - INFLUXDB_HTTP_LOG_ENABLED=false
      - INFLUXDB_DATA_QUERY_LOG_ENABLED=false
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./influx:/docker-entrypoint-initdb.d
    ports:
      - 8086:8086

  #  Jaeger
  ## Collects and visualizes traces
  jaeger:
    image: jaegertracing/all-in-one:1.25.0
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=false
    ports:
      - 16686:16686
      - 14268:14268
      - 14269:14269
      - 4317:4317
      - 4318:4318

  #  Grafana
  ## Dashboarding
  grafana:
    image: grafana/grafana:9.0.2
    container_name: grafana
    environment:
      - GF_PANELS_DISABLE_SANITIZE_HTML=TRUE
      - GF_SECURITY_ADMIN_PASSWORD=demo
      - GF_PATHS_PROVISIONING=/usr/share/grafana/custom/
      - GF_INSTALL_PLUGINS=https://github.com/NovatecConsulting/novatec-service-dependency-graph-panel/releases/download/v4.0.2/novatec-sdg-panel.zip;novatec-sdg-panel
    volumes:
      - ./grafana/provisioning/influxdb:/usr/share/grafana/custom/
      - ./grafana/provisioning/home-dashboard/home.json:/usr/share/grafana/public/dashboards/home.json
    ports:
      - 3000:3000

  # Grafana Loki & Promtail
  ## Make logs available in Grafana
  loki:
    image: grafana/loki:2.5.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.5.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml

volumes:
  agent-vol:
